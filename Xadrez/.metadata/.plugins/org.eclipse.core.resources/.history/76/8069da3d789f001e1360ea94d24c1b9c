package chess;

import boardgame.Board;
import boardgame.Position;
import chesspieces.Bishop;
import chesspieces.King;
import chesspieces.Knight;
import chesspieces.Pawn;
import chesspieces.Queen;
import chesspieces.Rook;

public class ChessMatch {
	private Board board;
	
	public ChessMatch() {
		board = new Board(8, 8);
	}
	
	public ChessPiece[][] getPieces(){
		ChessPiece[][] mat = new ChessPiece[board.getRow()][board.getColumn()];
		for (int i = 0; i < board.getRow(); i++) {
			for (int j = 0; j < board.getColumn(); j++) {
				mat[i][j] = (ChessPiece)board.getPiece(i, j);
			}
		}
		return mat;
	}
	
	public void placeNewPiece(char column, int row, ChessPiece piece) {
		board.placePiece(piece, new ChessPosition(column, row).toPosition());
	}
	
	public void initialSetup() {
		for (int i = 0; i < board.getColumn(); i++) { placeNewPiece((char)('a'+i), 2,  new Pawn(board, Color.WHITE); }
		placeNewPiece('a', 1, new Rook  (board, Color.WHITE));
		placeNewPiece('b', 1, new Knight(board, Color.WHITE));
		placeNewPiece('c', 1, new Bishop(board, Color.WHITE));
		placeNewPiece('d', 1, new Queen (board, Color.WHITE));
		placeNewPiece('e', 1, new King  (board, Color.WHITE));
		placeNewPiece('f', 1, new Bishop(board, Color.WHITE));
		placeNewPiece('g', 1, new Knight(board, Color.WHITE));
		placeNewPiece('h', 1, new Rook  (board, Color.WHITE));
		
		
		for (int i = 0; i < board.getColumn(); i++) { placeNewPiece(new Pawn(board, Color.BLACK), new Position(1, i)); }
		placeNewPiece(new Rook  (board, Color.BLACK), new Position(0, 0));
		placeNewPiece(new Knight(board, Color.BLACK), new Position(0, 1));
		placeNewPiece(new Bishop(board, Color.BLACK), new Position(0, 2));
		placeNewPiece(new Queen (board, Color.BLACK), new Position(0, 3));
		placeNewPiece(new King  (board, Color.BLACK), new Position(0, 4));
		placeNewPiece(new Bishop(board, Color.BLACK), new Position(0, 5));
		placeNewPiece(new Knight(board, Color.BLACK), new Position(0, 6));
		placeNewPiece(new Rook  (board, Color.BLACK), new Position(0, 7));
	}
}
